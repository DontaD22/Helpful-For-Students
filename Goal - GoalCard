import React, { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Pencil, Trash2, Plus, Calendar } from "lucide-react";
import { format } from "date-fns";

export default function GoalCard({ goal, onEdit, onDelete, onUpdateProgress }) {
  const [showAddAmount, setShowAddAmount] = useState(false);
  const [amount, setAmount] = useState("");

  const progress = (goal.current_amount / goal.target_amount) * 100;
  const remaining = goal.target_amount - goal.current_amount;

  const handleAddAmount = () => {
    const newAmount = goal.current_amount + parseFloat(amount);
    onUpdateProgress(goal.id, newAmount);
    setAmount("");
    setShowAddAmount(false);
  };

  const categoryColors = {
    emergency_fund: "bg-red-100 text-red-800",
    study_abroad: "bg-blue-100 text-blue-800",
    laptop: "bg-purple-100 text-purple-800",
    car: "bg-green-100 text-green-800",
    graduation: "bg-yellow-100 text-yellow-800",
  };

  return (
    <Card className="hover:shadow-lg transition-shadow">
      <CardHeader>
        <div className="flex justify-between items-start">
          <div>
            <CardTitle className="mb-2">{goal.title}</CardTitle>
            <Badge className={categoryColors[goal.category]}>
              {goal.category.replace(/_/g, ' ')}
            </Badge>
          </div>
          <div className="flex gap-2">
            <Button variant="ghost" size="icon" onClick={onEdit}>
              <Pencil className="w-4 h-4" />
            </Button>
            <Button variant="ghost" size="icon" onClick={onDelete}>
              <Trash2 className="w-4 h-4 text-red-500" />
            </Button>
          </div>
        </div>
      </CardHeader>
      <CardContent className="space-y-4">
        <div>
          <div className="flex justify-between mb-2">
            <span className="text-sm font-medium">Progress</span>
            <span className="text-sm font-semibold">{progress.toFixed(0)}%</span>
          </div>
          <Progress value={progress} className="h-3" />
          <div className="flex justify-between mt-2 text-sm text-gray-600">
            <span>${goal.current_amount?.toFixed(0)}</span>
            <span>${goal.target_amount?.toFixed(0)}</span>
          </div>
        </div>

        <div className="p-3 bg-gray-50 rounded-lg">
          <p className="text-sm text-gray-600">Remaining</p>
          <p className="text-2xl font-bold text-gray-900">${remaining.toFixed(2)}</p>
        </div>

        <div className="flex items-center gap-2 text-sm text-gray-500">
          <Calendar className="w-4 h-4" />
          Target: {format(new Date(goal.deadline), "MMM d, yyyy")}
        </div>

        {goal.notes && (
          <p className="text-sm text-gray-600 border-t pt-3">{goal.notes}</p>
        )}

        {!showAddAmount ? (
          <Button 
            variant="outline" 
            className="w-full"
            onClick={() => setShowAddAmount(true)}
          >
            <Plus className="w-4 h-4 mr-2" />
            Add Progress
          </Button>
        ) : (
          <div className="flex gap-2">
            <Input
              type="number"
              step="0.01"
              placeholder="Amount"
              value={amount}
              onChange={(e) => setAmount(e.target.value)}
            />
            <Button onClick={handleAddAmount}>Add</Button>
            <Button variant="outline" onClick={() => setShowAddAmount(false)}>Cancel</Button>
          </div>
        )}
      </CardContent>
    </Card>
  );
}
